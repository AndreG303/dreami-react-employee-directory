{"version":3,"sources":["utils/DataContext.js","components/TableBody/index.js","components/TableRow/index.js","components/SearchSection/index.js","components/Navbar/index.js","utils/API.js","components/DataArea/index.js","components/Main/index.js","components/Wrapper/index.js","components/Header/index.js","App.js","serviceWorker.js","index.js"],"names":["DataAreaContext","React","createContext","TableBody","context","useContext","DataHook","undefined","developerState","filteredUsers","name","map","login","picture","phone","email","dob","key","uuid","data-th","className","src","medium","alt","first","last","href","target","date","dateArray","split","year","join","formatDate","TableRow","id","headings","width","style","onClick","handleSort","toLowerCase","SearchSection","DataContext","type","placeholder","aria-label","onChange","e","handleSearchChange","styles","display","justifyContent","Navbar","axios","get","DataArea","useState","users","order","setDeveloperState","useEffect","API","then","results","console","log","data","Provider","value","event","filter","filteredList","item","values","indexOf","heading","currentOrder","elem","toString","sortedUsers","sort","a","b","localeCompare","age","updatedHeadings","length","Main","Wrapper","props","children","Header","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8d573929.chunk.js","sourcesContent":["import React from \"react\";\n\nconst DataAreaContext = React.createContext({\n\n});\n\nexport default DataAreaContext;","import React, { useContext } from \"react\";\nimport DataHook from \"../../utils/DataContext\"\n\nconst TableBody = () => {\n    const context = useContext(DataHook);\n\n    function formatDate(date){\n        const dateArray = date.split(\"-\");\n        const year = dateArray[0];\n        const month = dateArray[1];\n        const dayArray = dateArray[2].split(\"T\");\n        const day = dayArray[0];\n        const formattedDate =[month, day, year].join(\"-\");\n        return formattedDate;\n    }\n    return (\n        <tbody>\n        {context.developerState.filteredUsers[0] !== undefined && context.developerState.filteredUsers[0].name !== undefined ? (\n          context.developerState.filteredUsers.map(({ login, name, picture, phone, email, dob }) => {\n            return (\n              <tr key={login.uuid}>\n                <td data-th=\"Image\" className=\"align-middle\">\n                  <img\n                    src={picture.medium}\n                    alt=\"profile\"\n                    className=\"img-responsive\"\n                  />\n                </td>\n                <td data-th=\"Name\" className=\"name-cell align-middle\">\n                  {name.first} {name.last}\n                </td>\n                <td data-th=\"Phone\" className=\"align-middle\">\n                  {phone}\n                </td>\n                <td data-th=\"Email\" className=\"align-middle\">\n                  <a href={\"mailto:\" + email} target=\"__blank\">\n                    {email}\n                  </a>\n                </td>\n                <td data-th=\"DOB\" className=\"align-middle\">\n                  {formatDate(dob.date)}\n                </td>\n              </tr>\n            );\n          })\n        ) : (\n          <></>\n        )}\n      </tbody>\n    );\n  }\n  \n  export default TableBody;","import React, { useContext } from \"react\";\nimport TableBody from \"../TableBody\";\nimport \"./style.css\";\nimport DataHook from \"../../utils/DataContext\";\n\n\nconst TableRow = () => {\n    const context = useContext(DataHook);\n\n    return (\n\n        <div className=\"datatable mt-5\">\n            <table\n                id=\"table\"\n                className=\"table table-striped table-hover table-condensed\"\n            >\n                <thead>\n                    <tr>\n                        {context.developerState.headings.map(({ name, width }) => {\n                            return (\n                                <th\n                                    className=\"col\"\n                                    key={name}\n                                    style={{ width }}\n                                    onClick={() => {\n                                        context.handleSort(name.toLowerCase());\n                                    }}\n                                >\n                                    {name}\n                                    <span className=\"pointer\"></span>\n                                </th>\n                            );\n                        })}\n                    </tr>\n                </thead>\n\n                <TableBody />\n            </table>\n        </div>\n    );\n}\n\nexport default TableRow;","import React, { useContext } from \"react\";\nimport DataContext from \"../../utils/DataContext\";\n\nconst SearchSection = () => {\n    const context = useContext(DataContext);\nreturn (\n    <div className=\"searchbox\">\n      <div className=\"input-group\">\n          <div className=\"input-group-prepend\">\n            <span className=\"input-group-text\" id=\"\">\n              Search\n            </span>\n          </div>\n          <input\n          className=\"form-control mr-sm-2\"\n          type=\"search\"\n          placeholder=\"name\"\n          aria-label=\"Search\"\n          onChange={e => context.handleSearchChange(e)}\n        />\n        </div>\n    </div>\n  );\n}\nexport default SearchSection;","import React from 'react';\nimport SearchSection from \"../SearchSection/index\"\n\nconst styles = {\ndisplay:\"flex\",\njustifyContent: \"center\"\n}\n\nfunction Navbar() {\n    return (\n        <nav style={styles} className=\"navbar navbar-expand-lg navbar-light bg-light\">\n       <div className=\"search-area col-4\">\n        <SearchSection />\n    </div>\n</nav>\n    );\n}\nexport default Navbar;","import axios from \"axios\";\n\nexport default {\n    getUsers: function(){\n        return axios.get(\"https://randomuser.me/api/?results=50&nat=us\")\n    }\n};","import React, {useState, useEffect} from \"react\";\nimport TableRow from \"../TableRow\";\nimport Navbar from \"../Navbar\";\nimport API from \"../../utils/API\";\nimport DataContext from \"../../utils/DataContext\";\n\n// set developer state and table headings\nconst DataArea = () => {\n    const [developerState, setDeveloperState] = useState({\n        users: [],\n        order: \"descend\",\n        filteredUsers: [],\n        headings: [\n          { name: \"Image\", width: \"10%\", order: \"descend\" },\n          { name: \"name\", width: \"10%\", order: \"descend\" },\n          { name: \"phone\", width: \"20%\", order: \"descend\" },\n          { name: \"email\", width: \"20%\", order: \"descend\" },\n          { name: \"dob\", width: \"10%\", order: \"descend\" }\n        ]\n      });\n    \n      // filtered heading elements by ascending and descending order\n      const handleSort = heading => {\n        let currentOrder = developerState.headings\n          .filter(elem => elem.name === heading)\n          .map(elem => elem.order)\n          .toString();\n    \n        if (currentOrder === \"descend\") {\n          currentOrder = \"ascend\";\n        } else {\n          currentOrder = \"descend\";\n        }\n    \n        const compareFnc = (a, b) => {\n          if (currentOrder === \"ascend\") {\n            if (a[heading] === undefined) {\n              return 1;\n            } else if (b[heading] === undefined) {\n              return -1;\n            }\n            else if (heading === \"name\") {\n              return a[heading].first.localeCompare(b[heading].first);\n            } else if (heading === \"dob\") {\n              return a[heading].age - b[heading].age;\n            } else {\n              return a[heading].localeCompare(b[heading]);\n            }\n          } else {\n            if (a[heading] === undefined) {\n              return 1;\n            } else if (b[heading] === undefined) {\n              return -1;\n            }\n            else if (heading === \"name\") {\n              return b[heading].first.localeCompare(a[heading].first);\n            }else if (heading === \"dob\") {\n              return b[heading].age - a[heading].age;\n            }  else {\n              return b[heading].localeCompare(a[heading]);\n            }\n          }\n        };\n        const sortedUsers = developerState.filteredUsers.sort(compareFnc);\n        const updatedHeadings = developerState.headings.map(elem => {\n          elem.order = elem.name === heading ? currentOrder : elem.order;\n          return elem;\n        });\n    \n        setDeveloperState({\n          ...developerState,\n          filteredUsers: sortedUsers,\n          headings: updatedHeadings\n        });\n      };\n    \n      // serch area funcionality and filter input to lower case\n      const handleSearchChange = event => {\n        const filter = event.target.value;\n        const filteredList = developerState.users.filter(item => {\n          let values = item.name.first.toLowerCase() + \" \" + item.name.last.toLowerCase();\n          console.log(filter, values)\n        if(values.indexOf(filter.toLowerCase()) !== -1){\n          return item\n        };\n        });\n    \n        setDeveloperState({ ...developerState, filteredUsers: filteredList });\n      };\n    // use effect to get results and users data\n      useEffect(() => {\n        API.getUsers().then(results => {\n          console.log(results.data.results);\n          setDeveloperState({\n            ...developerState,\n            users: results.data.results,\n            filteredUsers: results.data.results\n          });\n        });\n      }, []);\n    \n      return (\n        <DataContext.Provider\n          value={{ developerState, handleSearchChange, handleSort }}\n        >\n          <Navbar />\n          <div className=\"data-area\">\n            {developerState.filteredUsers.length > 0 ? <TableRow /> : <div></div>}\n          </div>\n        </DataContext.Provider>\n      );\n    };\n    \n    export default DataArea;","import React from\"react\";\nimport DataArea from \"../DataArea/index\";\n\n\nfunction Main (){\n    return(\n        <DataArea />\n    );\n};\n\nexport default Main;","import React from \"react\";\n\nfunction Wrapper(props) {\n    return (\n        <div className=\"container\">{props.children}</div>\n    )\n}\n export default Wrapper;","import React from \"react\";\nimport \"./style.css\"\n\nfunction Header () {\n    return (\n        <div className=\"header\">\n            <h1>EMPLOYEE DIRECTORY</h1>\n            <p>Use Search to Filter Results or Click the Arrows on Headings to Sort Them in Ascending or Descending Order</p>\n        </div>\n    )\n}\n\nexport default Header;","import React from 'react';\nimport Main from \"./components/Main/index\";\nimport Wrapper from \"./components/Wrapper/index\";\nimport Header from \"./components/Header/index\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n   <Wrapper>\n     <Header />\n     <Main />\n   </Wrapper>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}